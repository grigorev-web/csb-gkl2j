{"version":3,"sources":["types.js","components/EventDiv.js","functions.js","App.js","index.js"],"names":["WEEKDAYS_SHORT","MONTHS","Date","date","setDate","getDate","get_date","EventDiv","props","Array","isArray","event","category","className","href","permalink","src","image","data-spai","alt","data-spai-upd","map","cat","key","name","title","short_description","addParamToURL","param","value","baseUrl","window","location","protocol","host","pathname","arguments","length","history","pushState","url","URL","params","URLSearchParams","search","set","newUrl","toString","console","warn","App","React","useState","urlParams","from","get","Number","setHours","to","period","type","range","enteredTo","events","showEvents","select","getInitialState","state","setState","isSelectingFirstDay","day","isBeforeFirstDay","DateUtils","isDayBefore","handleResetClick","prevState","useEffect","searchParams","append","fetch","then","response","json","data","log","Object","entries","obj","push","getPosts","disabledDays","before","selectedDays","alert","highlighted","v","slug","modifiers","weekends","daysOfWeek","start","end","count","filter","ev","sort","a","b","reverse","listEvents","slice","hasMore","numberOfMonths","firstDayOfWeek","fromMonth","onDayClick","onDayMouseEnter","months","weekdaysShort","onChange","target","onClick","dataLength","next","setTimeout","loader","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.54674836.chunk.js","sourcesContent":["export const WEEKDAYS_SHORT = [\"Вс\", \"Пн\", \"Вт\", \"Ср\", \"Чт\", \"Пт\", \"Сб\"];\r\nexport const MONTHS = [\r\n  \"Январь\",\r\n  \"Февраль\",\r\n  \"Март\",\r\n  \"Апрель\",\r\n  \"Май\",\r\n  \"Июнь\",\r\n  \"Июль\",\r\n  \"Август\",\r\n  \"Сентябрь\",\r\n  \"Октябрь\",\r\n  \"Ноябрь\",\r\n  \"Декабрь\"\r\n];\r\n\r\nfunction get_date() {\r\n  let date = new Date();\r\n  date.setDate(date.getDate() + 4);\r\n  return date;\r\n}\r\n\r\nexport const EVENTS = [\r\n  { id: 1, date: new Date(), title: \"title1\", content: \"content1\" },\r\n  { id: 2, date: get_date(), title: \"title2\", content: \"content2\" }\r\n];\r\n","import { BsClock } from \"react-icons/bs\";\r\n\r\nexport default function EventDiv(props) {\r\n  /*\r\n  return(\r\n    <div> Event date: {props.ev.toLocaleString()}</div>\r\n  )\r\n*/\r\n\r\n  if (!Array.isArray(props.event.category)) return null;\r\n\r\n  return (\r\n    <div className=\"post post_medium\">\r\n      <div className=\"post__image-content\">\r\n        <a href={props.event.permalink}>\r\n          <img\r\n            className=\"post__image\"\r\n            src={props.event.image}\r\n            data-spai=\"1\"\r\n            alt=\"\"\r\n            data-spai-upd=\"374\"\r\n          />\r\n        </a>\r\n      </div>\r\n      <div className=\"post__content post__content_small post__content_high\">\r\n        {props.event.category.map((cat, key) => {\r\n          return (\r\n            <a\r\n              key={key}\r\n              className=\"link post__tag\"\r\n              href=\"https://russoft.org/our-events/?events-cat=russoft-events\"\r\n            >\r\n              {cat.name}\r\n            </a>\r\n          );\r\n        })}{\" \"}\r\n        <a\r\n          href={props.event.permalink}\r\n          className=\"link post__name post__name_small\"\r\n        >\r\n          {props.event.title}{\" \"}\r\n        </a>\r\n        <div className=\"post__description\">{props.event.short_description}</div>\r\n        <div className=\"post__date\">\r\n          <BsClock />\r\n          <span className=\"post__time\">{props.event.date} </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export function addParamToURL(param, value) {\r\n  var baseUrl =\r\n    window.location.protocol +\r\n    \"//\" +\r\n    window.location.host +\r\n    window.location.pathname;\r\n\r\n  if (arguments.length === 0) {\r\n    window.history.pushState(null, null, baseUrl);\r\n    return;\r\n  }\r\n  if (window.history.pushState) {\r\n    let url = new URL(window.location.href);\r\n    let params = new URLSearchParams(url.search);\r\n\r\n    //Add  parameter.\r\n    params.set(param, value);\r\n\r\n    var newUrl = baseUrl + \"?\" + params.toString();\r\n    window.history.pushState(null, null, newUrl);\r\n  } else {\r\n    console.warn(\"History API не поддерживается\");\r\n  }\r\n}\r\n","import DayPicker, { DateUtils } from \"react-day-picker\";\nimport React, { useEffect } from \"react\";\nimport \"react-day-picker/lib/style.css\";\nimport \"./styles.css\";\nimport { WEEKDAYS_SHORT, MONTHS } from \"./types\";\nimport EventDiv from \"./components/EventDiv\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { addParamToURL } from \"./functions\";\n\nfunction App() {\n  const [state, setState] = React.useState(getInitialState());\n\n  function getPosts() {\n    var searchParams = new URLSearchParams();\n    searchParams.append(\"from\", state.range.from);\n    searchParams.append(\"to\", state.range.to);\n    //console.log(searchParams);\n    fetch(\n      \"https://russoft.org/wp-content/plugins/react-calendar/api.php?action=get_events&\" +\n        searchParams\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"fetch data: \", data);\n\n        let events = [];\n        Object.entries(data).map(([k, obj], key) => {\n          events.push(obj);\n        });\n        console.log(events);\n        setState((prevState) => ({\n          ...prevState,\n          events: events\n          //showEvents:\n        }));\n      });\n  }\n\n  useEffect(() => {\n    //console.log(\"did mount\", state);\n    getPosts();\n  }, []);\n\n  function getInitialState() {\n    const urlParams = new URLSearchParams(window.location.search);\n    //from ------------\n    let from = urlParams.get(\"from\")\n      ? new Date(new Date(Number(urlParams.get(\"from\"))).setHours(0))\n      : new Date(new Date().setHours(0));\n    // to -----------------------------\n    let to = urlParams.get(\"to\")\n      ? new Date(new Date(Number(urlParams.get(\"to\"))).setHours(23, 59))\n      : new Date(new Date().setDate(new Date().getDate() + 31));\n\n    let period = \"\";\n    if (!(urlParams.get(\"from\") && urlParams.get(\"to\"))) {\n      if (urlParams.get(\"period\")) {\n        switch (urlParams.get(\"period\")) {\n          case \"next-week\":\n            period = \"next-week\";\n            from = new Date(new Date().setHours(0));\n            to = new Date(new Date().setDate(new Date().getDate() + 7));\n            break;\n          case \"next-month\":\n            period = \"next-month\";\n            from = new Date(new Date().setHours(0));\n            to = new Date(new Date().setDate(new Date().getDate() + 31));\n            break;\n          case \"next-half-year\":\n            period = \"next-half-year\";\n            from = new Date(new Date().setHours(0));\n            to = new Date(new Date().setDate(new Date().getDate() + 180));\n            break;\n          case \"next-year\":\n            period = \"next-year\";\n            from = new Date(new Date().setHours(0));\n            to = new Date(new Date().setDate(new Date().getDate() + 365));\n            break;\n          case \"last-week\":\n            period = \"last-week\";\n            from = new Date(new Date().setDate(new Date().getDate() - 7));\n            to = new Date(new Date().setHours(23, 59));\n            break;\n          case \"last-month\":\n            period = \"last-month\";\n            from = new Date(new Date().setDate(new Date().getDate() - 30));\n            to = new Date(new Date().setHours(23, 59));\n            break;\n          case \"last-half-year\":\n            period = \"last-half-year\";\n            from = new Date(new Date().setDate(new Date().getDate() - 182));\n            to = new Date(new Date().setHours(23, 59));\n            break;\n          case \"last-year\":\n            period = \"last-year\";\n            from = new Date(new Date().setDate(new Date().getDate() - 365));\n            to = new Date(new Date().setHours(23, 59));\n            break;\n          default:\n            from = null;\n            to = null;\n        }\n      }\n    }\n\n    let type = urlParams.get(\"type\") ? urlParams.get(\"type\") : \"\";\n    return {\n      range: {\n        from: from,\n        to: to\n      },\n      enteredTo: to,\n      events: [],\n      showEvents: 10,\n      select: { type: type, period: period }\n    };\n  }\n  function isSelectingFirstDay(from, to, day) {\n    const isBeforeFirstDay = from && DateUtils.isDayBefore(day, from);\n    const isRangeSelected = from && to;\n    //console.log(\"isBeforeFirstDay:\", isBeforeFirstDay);\n    //console.log(\"from:\", from);\n    return !from || isBeforeFirstDay || isRangeSelected;\n  }\n\n  //////////////////////////////////////////////////////////////////////////////\n  function handleDayClick(day) {\n    const { from, to } = state.range;\n    if (from < to) {\n      handleResetClick();\n      return;\n    }\n    if (from && to && day >= from && day <= to) {\n      handleResetClick();\n      return;\n    }\n    if (isSelectingFirstDay(from, to, day)) {\n      // first click\n      //console.log(day);\n      //day = new Date(day.setHours(0));\n      //console.log(day);\n      //return;\n      // console.log(\"first day\");\n      //console.log(typeof day);\n      addParamToURL(\"from\", day.setHours(0));\n\n      setState((prevState) => ({\n        ...prevState,\n        range: {\n          from: new Date(day.setHours(0)),\n          to: null\n        },\n        enteredTo: day,\n        select: {\n          ...prevState.select,\n          period: \"\"\n        }\n      }));\n    } else {\n      addParamToURL(\"to\", day.setHours(23, 59, 59));\n      //console.log(\"second click\"); // second click\n      setState((prevState) => ({\n        ...prevState,\n        range: {\n          ...prevState.range,\n          to: new Date(day.setHours(23, 59, 59))\n        },\n        select: {\n          ...prevState.select,\n          period: \"\"\n        },\n        enteredTo: day,\n        showEvents: 10\n      }));\n    }\n  }\n  ///////////////////////////////////////////////////////////////////////////////\n\n  function handleDayMouseEnter(day) {\n    const { from, to } = state.range;\n    if (!isSelectingFirstDay(from, to, day)) {\n      setState((prevState) => ({\n        ...prevState,\n        enteredTo: day\n      }));\n    }\n  }\n\n  function handleResetClick() {\n    addParamToURL();\n    setState((prevState) => ({\n      ...prevState,\n      range: { from: null, to: null },\n      select: { type: \"\", period: \"\" },\n      showEvents: 10\n    }));\n    //console.log(state);\n  }\n\n  function handleSelectType(event) {\n    addParamToURL(\"type\", event.target.value);\n    setState((prevState) => ({\n      ...prevState,\n      showEvents: 10,\n      select: {\n        ...prevState.select,\n        type: event.target.value\n      }\n    }));\n  }\n\n  function handleSelectPeriod(event) {\n    addParamToURL(\"period\", event.target.value);\n    switch (event.target.value) {\n      ////////////////////////\n      case \"all-period\":\n        //console.log(\"all period\");\n\n        setState((prevState) => ({\n          ...prevState,\n          range: { from: null, to: null },\n          showEvents: 10,\n          select: {\n            ...prevState,\n            period: event.target.value\n          },\n          enteredTo: null\n        }));\n        break;\n      ///////////////////////\n      case \"next-week\":\n        // console.log(\"last-week\");\n        // let entered = new Date(new Date().setDate(new Date().getDate() + 7));\n        //console.log(\"log:\", entered);\n        setState((prevState) => ({\n          ...prevState,\n          range: {\n            from: new Date(new Date().setHours(0)),\n            to: new Date(new Date().setDate(new Date().getDate() + 7))\n          },\n          select: {\n            ...prevState,\n            period: event.target.value\n          },\n          enteredTo: new Date(new Date().setDate(new Date().getDate() + 7)),\n          showEvents: 10\n        }));\n        break;\n      //////////////////////\n      case \"next-month\":\n        //console.log(\"last-month\");\n        setState((prevState) => ({\n          ...prevState,\n          range: {\n            from: new Date(new Date().setHours(0)),\n            to: new Date(new Date().setDate(new Date().getDate() + 31))\n          },\n          select: {\n            ...prevState,\n            period: event.target.value\n          },\n          enteredTo: new Date(new Date().setDate(new Date().getDate() + 31)),\n          showEvents: 10\n        }));\n        break;\n      //////////////////////\n      case \"next-half-year\":\n        //console.log(\"last-half-year\");\n        setState((prevState) => ({\n          ...prevState,\n          range: {\n            from: new Date(new Date().setHours(0)),\n            to: new Date(new Date().setDate(new Date().getDate() + 180)),\n            showEvents: 10\n          },\n          select: {\n            ...prevState,\n            period: event.target.value\n          },\n          enteredTo: new Date(new Date().setDate(new Date().getDate() + 180)),\n          showEvents: 10\n        }));\n        break;\n      ///////////////////////\n      case \"next-year\":\n        //console.log(\"last-year\");\n        setState((prevState) => ({\n          ...prevState,\n          range: {\n            from: new Date(new Date().setHours(0)),\n            to: new Date(new Date().setDate(new Date().getDate() + 365)),\n            showEvents: 10\n          },\n          select: {\n            ...prevState,\n            period: event.target.value\n          },\n          enteredTo: new Date(new Date().setDate(new Date().getDate() + 365))\n        }));\n        break;\n      ///////////////////////\n      case \"last-week\":\n        setState((prevState) => ({\n          ...prevState,\n          range: {\n            from: new Date(new Date().setDate(new Date().getDate() - 7)),\n            to: new Date(new Date().setHours(23, 59))\n          },\n          select: {\n            ...prevState,\n            period: event.target.value\n          },\n          enteredTo: new Date(),\n          showEvents: 10\n        }));\n        break;\n      //////////////////////\n      case \"last-month\":\n        setState((prevState) => ({\n          ...prevState,\n          range: {\n            from: new Date(new Date().setDate(new Date().getDate() - 30)),\n            to: new Date(new Date().setHours(23, 59))\n          },\n          select: {\n            ...prevState,\n            period: event.target.value\n          },\n          enteredTo: new Date(),\n          showEvents: 10\n        }));\n        break;\n      //////////////////////\n\n      case \"last-half-year\":\n        setState((prevState) => ({\n          ...prevState,\n          range: {\n            from: new Date(new Date().setDate(new Date().getDate() - 182)),\n            to: new Date(new Date().setHours(23, 59))\n          },\n          select: {\n            ...prevState,\n            period: event.target.value\n          },\n          enteredTo: new Date(),\n          showEvents: 10\n        }));\n        break;\n      //////////////////////\n      case \"last-year\":\n        setState((prevState) => ({\n          ...prevState,\n          range: {\n            from: new Date(new Date().setDate(new Date().getDate() - 365)),\n            to: new Date(new Date().setHours(23, 59))\n          },\n          select: {\n            ...prevState,\n            period: event.target.value\n          },\n          enteredTo: new Date(),\n          showEvents: 10\n        }));\n        break;\n      //////////////////////\n      default:\n      //console.log(\"error period\");\n    }\n  }\n\n  function fetchMoreData() {\n    setTimeout(() => {\n      setState((prevState) => ({\n        ...prevState,\n        showEvents: prevState.showEvents + 10\n      }));\n      //console.log(state);\n    }, 1500);\n  }\n  console.log(\"state\", state);\n  const { range, enteredTo } = state;\n  //const modifiers = { start: range.from, end: enteredTo };\n  const disabledDays = { before: new Date() }; //state.range.from };\n  const selectedDays = [range.from, { from: range.from, to: enteredTo }]; //o: enteredTo }];\n  /////////////////////////////////////////////////////////\n  // TEST\n  if (state.select.type === \"test\") alert(\"test\");\n  let highlighted = state.events.map((v, key) => {\n    if (\n      state.select.type === \"russoft-events\" &&\n      Array.isArray(v.category) &&\n      v.category.length > 0 &&\n      v.category[0].slug !== \"russoft-events\"\n    )\n      return null;\n    if (\n      state.select.type === \"partners-events\" &&\n      Array.isArray(v.category) &&\n      v.category.length > 0 &&\n      v.category[0].slug !== \"partners-events\"\n    )\n      return null;\n    return new Date(v.date);\n  });\n\n  const modifiers = {\n    weekends: { daysOfWeek: [6, 0] }, // saturday, sunday\n    start: range.from,\n    end: range.to,\n    highlighted: highlighted\n  };\n\n  // Обьекты в диапазоне дат\n  let count = 0;\n  let events = state.events;\n  console.log(\"events1\", state.events);\n  // фильтр по Дате\n  events = events.filter((obj) => {\n    let ev = new Date(obj.date);\n    if (\n      (ev > state.range.from && ev < state.range.to) ||\n      state.range.from == null\n    ) {\n      count++;\n      return true;\n    }\n    return false;\n  });\n  console.log(\"filter date\", events);\n  console.log(\"state.select.type\", state.select.type);\n  // Фильтр наши - не наши мероприятия\n  events = events\n    .filter((obj) => {\n      //console.log(\"filter\", state.select.type);\n      let cat = obj.category;\n      switch (state.select.type) {\n        case \"all-events\":\n          return true;\n        case \"russoft-events\":\n          if (\n            Array.isArray(cat) &&\n            cat.length > 0 &&\n            cat[0].slug !== \"russoft-events\"\n          ) {\n            //console.log(\"Это не РУССОФТ!\", cat[0].slug);\n            count--;\n            return false;\n          } else if (!Array.isArray(cat)) {\n            count--;\n            return false;\n          }\n\n          return 1;\n        case \"partners-events\":\n          if (\n            Array.isArray(cat) &&\n            cat.length > 0 &&\n            cat[0].slug !== \"partners-events\"\n          ) {\n            count--;\n            return false;\n          } else if (!Array.isArray(cat)) {\n            count--;\n            return false;\n          }\n          return 1;\n\n        case \"company-events\":\n          if (\n            Array.isArray(cat) &&\n            cat.length > 0 &&\n            cat[0].slug !== \"company-events\"\n          ) {\n            count--;\n            return false;\n          } else if (!Array.isArray(cat)) {\n            count--;\n            return false;\n          }\n          return 1;\n        default:\n          return 1;\n      }\n    })\n    .sort(function (a, b) {\n      var dateA = new Date(a.date),\n        dateB = new Date(b.date);\n      return dateA - dateB; //сортировка по возрастающей дате\n    })\n    .reverse();\n  console.log(\"events\", events);\n  console.log(\"events length\", events.length);\n  let listEvents = events\n    .map((v, key) => <EventDiv key={key} event={v} />)\n    .slice(0, state.showEvents);\n\n  console.log(\"listEvents\", listEvents);\n  let hasMore = state.showEvents < count ? true : false;\n  //console.log(state);\n  return (\n    <div>\n      <DayPicker\n        className=\"Range\"\n        numberOfMonths={2}\n        firstDayOfWeek={1}\n        fromMonth={range.from}\n        selectedDays={selectedDays}\n        disabledDays={disabledDays}\n        modifiers={modifiers}\n        onDayClick={handleDayClick}\n        onDayMouseEnter={handleDayMouseEnter}\n        months={MONTHS}\n        weekdaysShort={WEEKDAYS_SHORT}\n      />\n      <div className=\"DayPicker-filter\">\n        <div className=\"DayPicker-filter__select\">\n          <select value={state.select.type} onChange={handleSelectType}>\n            <option value=\"all-events\">Все мероприятия</option>\n            <option value=\"тест\">Режим разработчика(тест)</option>\n            <option value=\"russoft-events\">Мероприятия РУССОФТ</option>\n            <option value=\"partners-events\">Мероприятия партнеров</option>\n            <option value=\"company-events\">Мероприятия компаний</option>\n          </select>\n\n          <select value={state.select.period} onChange={handleSelectPeriod}>\n            <option value=\"all-period\">За все время</option>\n            <option value=\"next-week\">На неделю вперед</option>\n            <option value=\"next-month\">На месяц вперед</option>\n            <option value=\"next-half-year\">На полгода вперед</option>\n            <option value=\"next-year\">На год вперед</option>\n\n            <option value=\"last-week\">За прошлую неделю</option>\n            <option value=\"last-month\">За прошлый месяц</option>\n            <option value=\"last-half-year\">За прошлые полгода</option>\n            <option value=\"last-year\">За прошлый год</option>\n          </select>\n        </div>\n        {/* !range.from && !range.to && \"Please select the first day.\" */}\n        {/* range.from && !range.to && \"Please select the last day.\" */}\n        {/* range.from &&\n          range.to &&\n          `Selected from ${range.from.toLocaleDateString()} to\n        ${range.to.toLocaleDateString()}` */}\n        <div className=\"DayPicker-filter__clear-button\">\n          <button className=\"link\" onClick={handleResetClick}>\n            Очистить фильтр\n          </button>\n        </div>\n      </div>\n\n      <div className=\"counter\">{events.length} мероприятий</div>\n      <div className=\"row row_flex\">\n        <InfiniteScroll\n          dataLength={state.showEvents}\n          next={fetchMoreData}\n          hasMore={hasMore}\n          loader={<h4>Загрузка...</h4>}\n        >\n          {listEvents}\n        </InfiniteScroll>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}